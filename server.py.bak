import pickle
import struct
import socket
import cv2

server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

PORT = 5001
host_name = socket.gethostname()
host_ip = socket.gethostbyname(host_name)

host_ip = '127.0.0.1'
socket_addr = (host_ip, PORT)
server_socket.bind(socket_addr)

server_socket.listen(5)

print("Listening on port: %s"%(socket_addr, ))

while True:
  client_socket, addr = server_socket.accept()
  data = b""
  payload_size = struct.calcsize("Q")
  while True:
    while len(data) < payload_size:
      packet = client_socket.recv(4*1024)
      if not packet:
        break
      data += packet
    packed_msg_size = data[ :payload_size]
    data = data[payload_size: ]
    msg_size = struct.unpack("Q", packed_msg_size)[0]
    while (len(data) < msg_size):
      data += client_socket.recv(4*1024)
    frame_data = data[ :msg_size]
    data = data[msg_size: ]
    frame = pickle.loads(frame_data)
    cv2.imshow("Server", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
      cv2.destroyAllWindows()
      break
  client_socket.close()


